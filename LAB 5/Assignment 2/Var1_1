    .text
    .globl main

main:
    # Test sra (Shift Right Arithmetic)
    li $t0, -16        # Load -16 (0xFFFFFFF0 in two's complement) into a temporary register
    sra $s0, $t0, 2    # Expected result: -4 (0xFFFFFFFC) stored in $s0 (preserved temporary)

    li $t1, 64         # Load 64 (0x00000040) into a temporary register
    sra $s1, $t1, 3    # Expected result: 8 (0x00000008) stored in $s1 (preserved temporary)

    # Save results to memory for verification
    la $a0, results    # Load the address of results array
    sw $s0, 0($a0)     # Store sra(-16, 2) result
    sw $s1, 4($a0)     # Store sra(64, 3) result

    # Test jal (Jump and Link)
    li $s2, 0          # Clear $s2 to check return value after function call
    jal test_sub       # Jump to subroutine, should save return address in $ra
    sw $ra, 8($a0)     # Save return address for verification
    sw $s2, 12($a0)    # Save $s2 for verification (should be modified)

    # End program
    li $v0, 10         # Exit syscall
    syscall

test_sub:
    li $s2, 42         # Modify $s2 to confirm function executed correctly
    jr $ra             # Return to main

    .data
results:
    .word 0, 0, 0, 0  # Reserve space for test results
